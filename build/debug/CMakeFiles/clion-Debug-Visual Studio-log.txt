"C:\Program Files\JetBrains\CLion 2023.2.2\bin\cmake\win\x64\bin\cmake.exe" -G "Visual Studio 17 2022" -S D:\ETH\Master\PhysicallyBasedSimulationInCG\pbs23-solution -B D:\ETH\Master\PhysicallyBasedSimulationInCG\pbs23-solution\build\debug
D:/ETH/Master/PhysicallyBasedSimulationInCG/pbs23-solution/libigl/include
D:/ETH/Master/PhysicallyBasedSimulationInCG/pbs23-solution/cmakeD:/ETH/Master/PhysicallyBasedSimulationInCG/pbs23-solution/libigl/include/../cmake
CMake Deprecation Warning at CMakeLists.txt:4 (cmake_minimum_required):
  Compatibility with CMake < 2.8.12 will be removed from a future version of
  CMake.

  Update the VERSION argument <min> value or use a ...<max> suffix to tell
  CMake that the project does not need compatibility with older versions.


CMake Warning (dev) at C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/ExternalProject.cmake:3091 (message):
  The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is
  not set.  The policy's OLD behavior will be used.  When using a URL
  download, the timestamps of extracted files should preferably be that of
  the time of extraction, otherwise code that depends on the extracted
  contents might not be rebuilt if the URL changes.  The OLD behavior
  preserves the timestamps from the archive instead, but this is usually not
  what you want.  Update your project to the NEW behavior or specify the
  DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this
  robustness issue.
Call Stack (most recent call first):
  C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/ExternalProject.cmake:4208 (_ep_add_download_command)
  CMakeLists.txt:9 (ExternalProject_Add)
This warning is for project developers.  Use -Wno-dev to suppress it.

-- Creating target: igl::core (igl)
-- Creating target: igl::opengl (igl_opengl)
CMake Deprecation Warning at CMakeLists.txt:4 (cmake_minimum_required):
  Compatibility with CMake < 2.8.12 will be removed from a future version of
  CMake.

  Update the VERSION argument <min> value or use a ...<max> suffix to tell
  CMake that the project does not need compatibility with older versions.


-- Creating target: igl::opengl_glfw (igl_opengl_glfw)
CMake Deprecation Warning at CMakeLists.txt:4 (cmake_minimum_required):
  Compatibility with CMake < 2.8.12 will be removed from a future version of
  CMake.

  Update the VERSION argument <min> value or use a ...<max> suffix to tell
  CMake that the project does not need compatibility with older versions.


CMake Deprecation Warning at libigl/external/glfw/CMakeLists.txt:10 (cmake_policy):
  The OLD behavior for policy CMP0042 will be removed from a future version
  of CMake.

  The cmake-policies(7) manual explains that the OLD behaviors of all
  policies are deprecated and that a policy should be set to OLD only under
  specific short-term circumstances.  Projects should be ported to the NEW
  behavior and not rely on setting a policy to OLD.


-- Could NOT find Vulkan (missing: VULKAN_LIBRARY VULKAN_INCLUDE_DIR) 
-- Using Win32 for window creation
-- Creating target: igl::opengl_glfw_imgui (igl_opengl_glfw_imgui)
CMake Deprecation Warning at CMakeLists.txt:4 (cmake_minimum_required):
  Compatibility with CMake < 2.8.12 will be removed from a future version of
  CMake.

  Update the VERSION argument <min> value or use a ...<max> suffix to tell
  CMake that the project does not need compatibility with older versions.


CMake Deprecation Warning at CMakeLists.txt:4 (cmake_minimum_required):
  Compatibility with CMake < 2.8.12 will be removed from a future version of
  CMake.

  Update the VERSION argument <min> value or use a ...<max> suffix to tell
  CMake that the project does not need compatibility with older versions.


CMake Warning (dev) at libigl/cmake/libigl.cmake:499 (export):
  Policy CMP0103 is not set: Multiple export() with same FILE without APPEND
  is not allowed.  Run "cmake --help-policy CMP0103" for policy details.  Use
  the cmake_policy command to set the policy and suppress this warning.

  export() command already specified for the file

    D:/ETH/Master/PhysicallyBasedSimulationInCG/pbs23-solution/build/debug/libigl-export.cmake

  Did you miss 'APPEND' keyword?
Call Stack (most recent call first):
  cmake/FindLIBIGL.cmake:40 (include)
  CMakeLists.txt:27 (find_package)
This warning is for project developers.  Use -Wno-dev to suppress it.

CMake Warning (dev) at C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/FindPackageHandleStandardArgs.cmake:438 (message):
  The package name passed to `find_package_handle_standard_args` (JSON) does
  not match the name of the calling package (Json).  This can lead to
  problems in calling code that expects `find_package` result variables
  (e.g., `_FOUND`) to follow a certain pattern.
Call Stack (most recent call first):
  2_fem/cmake/FindJson.cmake:18 (find_package_handle_standard_args)
  2_fem/src/CMakeLists.txt:3 (find_package)
This warning is for project developers.  Use -Wno-dev to suppress it.

-- 
JSON not found --- You can download it here: https://raw.githubusercontent.com/nlohmann/json (missing: JSON_INCLUDE_DIR) 
CMake Deprecation Warning at 2_fem/src/optLib/CMakeLists.txt:1 (cmake_minimum_required):
  Compatibility with CMake < 2.8.12 will be removed from a future version of
  CMake.

  Update the VERSION argument <min> value or use a ...<max> suffix to tell
  CMake that the project does not need compatibility with older versions.


CMake Deprecation Warning at 2_fem/src/helpersLib/CMakeLists.txt:1 (cmake_minimum_required):
  Compatibility with CMake < 2.8.12 will be removed from a future version of
  CMake.

  Update the VERSION argument <min> value or use a ...<max> suffix to tell
  CMake that the project does not need compatibility with older versions.


CMake Warning (dev) at C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/FindPackageHandleStandardArgs.cmake:438 (message):
  The package name passed to `find_package_handle_standard_args` (JSON) does
  not match the name of the calling package (Json).  This can lead to
  problems in calling code that expects `find_package` result variables
  (e.g., `_FOUND`) to follow a certain pattern.
Call Stack (most recent call first):
  2_fem/cmake/FindJson.cmake:18 (find_package_handle_standard_args)
  2_fem/src/guiLib/CMakeLists.txt:3 (find_package)
This warning is for project developers.  Use -Wno-dev to suppress it.

-- 
JSON not found --- You can download it here: https://raw.githubusercontent.com/nlohmann/json (missing: JSON_INCLUDE_DIR) 
CMake Deprecation Warning at 2_fem/src/femLib/CMakeLists.txt:1 (cmake_minimum_required):
  Compatibility with CMake < 2.8.12 will be removed from a future version of
  CMake.

  Update the VERSION argument <min> value or use a ...<max> suffix to tell
  CMake that the project does not need compatibility with older versions.


CMake Warning (dev) at C:/Program Files/JetBrains/CLion 2023.2.2/bin/cmake/win/x64/share/cmake-3.26/Modules/FindPackageHandleStandardArgs.cmake:438 (message):
  The package name passed to `find_package_handle_standard_args` (JSON) does
  not match the name of the calling package (Json).  This can lead to
  problems in calling code that expects `find_package` result variables
  (e.g., `_FOUND`) to follow a certain pattern.
Call Stack (most recent call first):
  2_fem/cmake/FindJson.cmake:18 (find_package_handle_standard_args)
  2_fem/src/app/CMakeLists.txt:5 (find_package)
This warning is for project developers.  Use -Wno-dev to suppress it.

-- 
JSON not found --- You can download it here: https://raw.githubusercontent.com/nlohmann/json (missing: JSON_INCLUDE_DIR) 
-- Configuring done (5.6s)
-- Generating done (0.1s)
-- Build files have been written to: D:/ETH/Master/PhysicallyBasedSimulationInCG/pbs23-solution/build/debug
